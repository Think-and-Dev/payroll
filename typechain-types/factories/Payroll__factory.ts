/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Payroll, PayrollInterface } from "../Payroll";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "Received",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "previousAdminRole",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "newAdminRole",
        type: "bytes32",
      },
    ],
    name: "RoleAdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleGranted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleRevoked",
    type: "event",
  },
  {
    inputs: [],
    name: "ADMIN_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DEFAULT_ADMIN_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "approveInvoice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "invoice",
        type: "uint256",
      },
    ],
    name: "getInvoice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
    ],
    name: "getRoleAdmin",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "invoice",
        type: "uint256",
      },
    ],
    name: "getUserInvoice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "grantRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "hasRole",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "invoice",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "registerInvoice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "renounceRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "revokeRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "setToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5033600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550620000686000801b336200006e60201b60201c565b620001e8565b6200008082826200008460201b60201c565b5050565b6200009682826200017560201b60201c565b6200017157600180600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555062000116620001e060201b60201c565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b60006001600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600033905090565b611de780620001f86000396000f3fe6080604052600436106100ec5760003560e01c80638da5cb5b1161008a578063b32413b711610059578063b32413b714610360578063bb24c3cc14610389578063c4d66de8146103b2578063d547741f146103db5761012c565b80638da5cb5b1461028f5780638e884e14146102ba57806391d14854146102f8578063a217fddf146103355761012c565b80632f2ff15d116100c65780632f2ff15d146101d457806336568abe146101fd5780633a23cc0a1461022657806375b238fc146102645761012c565b806301ffc9a714610131578063144fa6d71461016e578063248a9ca3146101975761012c565b3661012c577f88a5966d370b9919b20f3e2c13ff65706f196a4e32cc2c12bf57088f885258743334604051610122929190611856565b60405180910390a1005b600080fd5b34801561013d57600080fd5b5061015860048036038101906101539190611637565b610404565b604051610165919061187f565b60405180910390f35b34801561017a57600080fd5b50610195600480360381019061019091906114f5565b61047e565b005b3480156101a357600080fd5b506101be60048036038101906101b991906115d2565b6104d8565b6040516101cb919061189a565b60405180910390f35b3480156101e057600080fd5b506101fb60048036038101906101f691906115fb565b6104f8565b005b34801561020957600080fd5b50610224600480360381019061021f91906115fb565b610521565b005b34801561023257600080fd5b5061024d60048036038101906102489190611660565b6105a4565b60405161025b929190611987565b60405180910390f35b34801561027057600080fd5b5061027961065f565b604051610286919061189a565b60405180910390f35b34801561029b57600080fd5b506102a4610683565b6040516102b1919061183b565b60405180910390f35b3480156102c657600080fd5b506102e160048036038101906102dc919061151e565b6106a9565b6040516102ef929190611987565b60405180910390f35b34801561030457600080fd5b5061031f600480360381019061031a91906115fb565b610799565b60405161032c919061187f565b60405180910390f35b34801561034157600080fd5b5061034a610804565b604051610357919061189a565b60405180910390f35b34801561036c57600080fd5b5061038760048036038101906103829190611660565b61080b565b005b34801561039557600080fd5b506103b060048036038101906103ab919061155a565b610960565b005b3480156103be57600080fd5b506103d960048036038101906103d491906114f5565b610c4a565b005b3480156103e757600080fd5b5061040260048036038101906103fd91906115fb565b610daf565b005b60007f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480610477575061047682610dd8565b5b9050919050565b6000801b6104938161048e610e42565b610e4a565b81600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b600060016000838152602001908152602001600020600101549050919050565b610501826104d8565b6105128161050d610e42565b610e4a565b61051c8383610ee7565b505050565b610529610e42565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610596576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161058d90611967565b60405180910390fd5b6105a08282610fc7565b5050565b600080600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600084815260200190815260200160002054600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600085815260200190815260200160002060009054906101000a900460ff1691509150915091565b7fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c2177581565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000807fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c217756106de816106d9610e42565b610e4a565b600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600085815260200190815260200160002054600360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600086815260200190815260200160002060009054906101000a900460ff1692509250509250929050565b60006001600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6000801b81565b7fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c2177561083d81610838610e42565b610e4a565b81600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461088c91906119d7565b9250508190555081600760008282546108a591906119d7565b92505081905550600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663095ea7b330846040518363ffffffff1660e01b8152600401610909929190611856565b602060405180830381600087803b15801561092357600080fd5b505af1158015610937573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061095b91906115a9565b505050565b7fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c217756109928161098d610e42565b610e4a565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161415610a02576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109f990611947565b60405180910390fd5b600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054821115610a4e57600080fd5b81600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000858152602001908152602001600020819055506001600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600085815260200190815260200160002060006101000a81548160ff02191690831515021790555081600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610b5b9190611a87565b92505081905550600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb85846040518363ffffffff1660e01b8152600401610bbf929190611856565b602060405180830381600087803b158015610bd957600080fd5b505af1158015610bed573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c1191906115a9565b508160076000828254610c249190611a87565b925050819055508160086000828254610c3d91906119d7565b9250508190555050505050565b600060019054906101000a900460ff16610c725760008054906101000a900460ff1615610c7b565b610c7a6110a9565b5b610cba576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cb190611927565b60405180910390fd5b60008060019054906101000a900460ff161590508015610d0a576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b610d496040518060400160405280601f81526020017f4465706c6f79696e67206120506179726f6c6c2077697468206f776e65723a00815250836110ba565b81600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508015610dab5760008060016101000a81548160ff0219169083151502179055505b5050565b610db8826104d8565b610dc981610dc4610e42565b610e4a565b610dd38383610fc7565b505050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b600033905090565b610e548282610799565b610ee357610e798173ffffffffffffffffffffffffffffffffffffffff166014611156565b610e878360001c6020611156565b604051602001610e98929190611801565b6040516020818303038152906040526040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610eda91906118b5565b60405180910390fd5b5050565b610ef18282610799565b610fc357600180600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550610f68610e42565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b610fd18282610799565b156110a55760006001600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555061104a610e42565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45b5050565b60006110b430611450565b15905090565b61115282826040516024016110d09291906118d7565b6040516020818303038152906040527f319af333000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611463565b5050565b6060600060028360026111699190611a2d565b61117391906119d7565b67ffffffffffffffff8111156111b2577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280601f01601f1916602001820160405280156111e45781602001600182028036833780820191505090505b5090507f300000000000000000000000000000000000000000000000000000000000000081600081518110611242577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053507f7800000000000000000000000000000000000000000000000000000000000000816001815181106112cc577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053506000600184600261130c9190611a2d565b61131691906119d7565b90505b6001811115611402577f3031323334353637383961626364656600000000000000000000000000000000600f86166010811061137e577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b1a60f81b8282815181106113bb577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600485901c9450806113fb90611b6c565b9050611319565b5060008414611446576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161143d90611907565b60405180910390fd5b8091505092915050565b600080823b905060008111915050919050565b60008151905060006a636f6e736f6c652e6c6f679050602083016000808483855afa5050505050565b60008135905061149b81611d3e565b92915050565b6000815190506114b081611d55565b92915050565b6000813590506114c581611d6c565b92915050565b6000813590506114da81611d83565b92915050565b6000813590506114ef81611d9a565b92915050565b60006020828403121561150757600080fd5b60006115158482850161148c565b91505092915050565b6000806040838503121561153157600080fd5b600061153f8582860161148c565b9250506020611550858286016114e0565b9150509250929050565b60008060006060848603121561156f57600080fd5b600061157d8682870161148c565b935050602061158e868287016114e0565b925050604061159f868287016114e0565b9150509250925092565b6000602082840312156115bb57600080fd5b60006115c9848285016114a1565b91505092915050565b6000602082840312156115e457600080fd5b60006115f2848285016114b6565b91505092915050565b6000806040838503121561160e57600080fd5b600061161c858286016114b6565b925050602061162d8582860161148c565b9150509250929050565b60006020828403121561164957600080fd5b6000611657848285016114cb565b91505092915050565b60006020828403121561167257600080fd5b6000611680848285016114e0565b91505092915050565b61169281611abb565b82525050565b6116a181611acd565b82525050565b6116b081611ad9565b82525050565b60006116c1826119b0565b6116cb81856119bb565b93506116db818560208601611b39565b6116e481611bc5565b840191505092915050565b60006116fa826119b0565b61170481856119cc565b9350611714818560208601611b39565b80840191505092915050565b600061172d6020836119bb565b915061173882611bd6565b602082019050919050565b6000611750602e836119bb565b915061175b82611bff565b604082019050919050565b60006117736022836119bb565b915061177e82611c4e565b604082019050919050565b60006117966017836119cc565b91506117a182611c9d565b601782019050919050565b60006117b96011836119cc565b91506117c482611cc6565b601182019050919050565b60006117dc602f836119bb565b91506117e782611cef565b604082019050919050565b6117fb81611b2f565b82525050565b600061180c82611789565b915061181882856116ef565b9150611823826117ac565b915061182f82846116ef565b91508190509392505050565b60006020820190506118506000830184611689565b92915050565b600060408201905061186b6000830185611689565b61187860208301846117f2565b9392505050565b60006020820190506118946000830184611698565b92915050565b60006020820190506118af60008301846116a7565b92915050565b600060208201905081810360008301526118cf81846116b6565b905092915050565b600060408201905081810360008301526118f181856116b6565b90506119006020830184611689565b9392505050565b6000602082019050818103600083015261192081611720565b9050919050565b6000602082019050818103600083015261194081611743565b9050919050565b6000602082019050818103600083015261196081611766565b9050919050565b60006020820190508181036000830152611980816117cf565b9050919050565b600060408201905061199c60008301856117f2565b6119a96020830184611698565b9392505050565b600081519050919050565b600082825260208201905092915050565b600081905092915050565b60006119e282611b2f565b91506119ed83611b2f565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611a2257611a21611b96565b5b828201905092915050565b6000611a3882611b2f565b9150611a4383611b2f565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615611a7c57611a7b611b96565b5b828202905092915050565b6000611a9282611b2f565b9150611a9d83611b2f565b925082821015611ab057611aaf611b96565b5b828203905092915050565b6000611ac682611b0f565b9050919050565b60008115159050919050565b6000819050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60005b83811015611b57578082015181840152602081019050611b3c565b83811115611b66576000848401525b50505050565b6000611b7782611b2f565b91506000821415611b8b57611b8a611b96565b5b600182039050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000601f19601f8301169050919050565b7f537472696e67733a20686578206c656e67746820696e73756666696369656e74600082015250565b7f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160008201527f647920696e697469616c697a6564000000000000000000000000000000000000602082015250565b7f45524332303a2063616e6e6f742072656769737465722061203020616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000600082015250565b7f206973206d697373696e6720726f6c6520000000000000000000000000000000600082015250565b7f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560008201527f20726f6c657320666f722073656c660000000000000000000000000000000000602082015250565b611d4781611abb565b8114611d5257600080fd5b50565b611d5e81611acd565b8114611d6957600080fd5b50565b611d7581611ad9565b8114611d8057600080fd5b50565b611d8c81611ae3565b8114611d9757600080fd5b50565b611da381611b2f565b8114611dae57600080fd5b5056fea2646970667358221220f47c55557ba19ff920c62cac4c59f14d0ce5d9d512eb79433fb7d8f5e15a231164736f6c63430008040033";

type PayrollConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PayrollConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Payroll__factory extends ContractFactory {
  constructor(...args: PayrollConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Payroll> {
    return super.deploy(overrides || {}) as Promise<Payroll>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Payroll {
    return super.attach(address) as Payroll;
  }
  connect(signer: Signer): Payroll__factory {
    return super.connect(signer) as Payroll__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PayrollInterface {
    return new utils.Interface(_abi) as PayrollInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Payroll {
    return new Contract(address, _abi, signerOrProvider) as Payroll;
  }
}
