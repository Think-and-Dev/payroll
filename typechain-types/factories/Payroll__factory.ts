/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Payroll, PayrollInterface } from "../Payroll";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "Received",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_ammount",
        type: "uint256",
      },
    ],
    name: "registerAmmount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5033600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610ada806100616000396000f3fe6080604052600436106100385760003560e01c80637a5943461461007d5780638da5cb5b146100a6578063c4d66de8146100d157610078565b36610078577f88a5966d370b9919b20f3e2c13ff65706f196a4e32cc2c12bf57088f88525874333460405161006e92919061077b565b60405180910390a1005b600080fd5b34801561008957600080fd5b506100a4600480360381019061009f9190610664565b6100fa565b005b3480156100b257600080fd5b506100bb61039d565b6040516100c89190610760565b60405180910390f35b3480156100dd57600080fd5b506100f860048036038101906100f3919061063b565b6103c3565b005b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461018a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610181906107d4565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156101fa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101f190610814565b60405180910390fd5b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541461029a57600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546004600082825461029291906108a6565b925050819055505b80600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506002829080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054600460008282546103929190610850565b925050819055505050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600060019054906101000a900460ff166103eb5760008054906101000a900460ff16156103f4565b6103f3610528565b5b610433576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161042a906107f4565b60405180910390fd5b60008060019054906101000a900460ff161590508015610483576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b6104c26040518060400160405280601f81526020017f4465706c6f79696e67206120506179726f6c6c2077697468206f776e65723a0081525083610539565b81600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080156105245760008060016101000a81548160ff0219169083151502179055505b5050565b6000610533306105d5565b15905090565b6105d1828260405160240161054f9291906107a4565b6040516020818303038152906040527f319af333000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506105e8565b5050565b600080823b905060008111915050919050565b60008151905060006a636f6e736f6c652e6c6f679050602083016000808483855afa5050505050565b60008135905061062081610a76565b92915050565b60008135905061063581610a8d565b92915050565b60006020828403121561064d57600080fd5b600061065b84828501610611565b91505092915050565b6000806040838503121561067757600080fd5b600061068585828601610611565b925050602061069685828601610626565b9150509250929050565b6106a9816108da565b82525050565b60006106ba82610834565b6106c4818561083f565b93506106d4818560208601610916565b6106dd81610978565b840191505092915050565b60006106f560228361083f565b915061070082610989565b604082019050919050565b6000610718602e8361083f565b9150610723826109d8565b604082019050919050565b600061073b60228361083f565b915061074682610a27565b604082019050919050565b61075a8161090c565b82525050565b600060208201905061077560008301846106a0565b92915050565b600060408201905061079060008301856106a0565b61079d6020830184610751565b9392505050565b600060408201905081810360008301526107be81856106af565b90506107cd60208301846106a0565b9392505050565b600060208201905081810360008301526107ed816106e8565b9050919050565b6000602082019050818103600083015261080d8161070b565b9050919050565b6000602082019050818103600083015261082d8161072e565b9050919050565b600081519050919050565b600082825260208201905092915050565b600061085b8261090c565b91506108668361090c565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561089b5761089a610949565b5b828201905092915050565b60006108b18261090c565b91506108bc8361090c565b9250828210156108cf576108ce610949565b5b828203905092915050565b60006108e5826108ec565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60005b83811015610934578082015181840152602081019050610919565b83811115610943576000848401525b50505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000601f19601f8301169050919050565b7f4f6e6c79206f776e65722063616e2063616c6c20746869732066756e6374696f60008201527f6e2e000000000000000000000000000000000000000000000000000000000000602082015250565b7f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160008201527f647920696e697469616c697a6564000000000000000000000000000000000000602082015250565b7f45524332303a2063616e6e6f742072656769737465722061203020616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b610a7f816108da565b8114610a8a57600080fd5b50565b610a968161090c565b8114610aa157600080fd5b5056fea264697066735822122062ba68281a284c4ead4f109b5d945d61ef321ce379b1502632d617760ac736c264736f6c63430008040033";

type PayrollConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PayrollConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Payroll__factory extends ContractFactory {
  constructor(...args: PayrollConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Payroll> {
    return super.deploy(overrides || {}) as Promise<Payroll>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Payroll {
    return super.attach(address) as Payroll;
  }
  connect(signer: Signer): Payroll__factory {
    return super.connect(signer) as Payroll__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PayrollInterface {
    return new utils.Interface(_abi) as PayrollInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Payroll {
    return new Contract(address, _abi, signerOrProvider) as Payroll;
  }
}
